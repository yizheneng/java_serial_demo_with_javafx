/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class yizheneng_Driver_SerialPort */

#ifndef _Included_yizheneng_Driver_SerialPort
#define _Included_yizheneng_Driver_SerialPort
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    listPorts
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_yizheneng_Driver_SerialPort_listPorts
  (JNIEnv *, jclass);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    openCPP
 * Signature: (Ljava/lang/String;IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_yizheneng_Driver_SerialPort_openCPP
  (JNIEnv *, jclass, jstring, jint, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    isOpenedCPP
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_yizheneng_Driver_SerialPort_isOpenedCPP
  (JNIEnv *, jclass, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    closeCPP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_yizheneng_Driver_SerialPort_closeCPP
  (JNIEnv *, jclass, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    readDataCPP
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_yizheneng_Driver_SerialPort_readDataCPP
  (JNIEnv *, jclass, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    sendCPP
 * Signature: ([BJ)V
 */
JNIEXPORT void JNICALL Java_yizheneng_Driver_SerialPort_sendCPP
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    getErrorCPP
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_yizheneng_Driver_SerialPort_getErrorCPP
  (JNIEnv *, jclass, jlong);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    newSerialPortCPP
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_yizheneng_Driver_SerialPort_newSerialPortCPP
  (JNIEnv *, jclass);

/*
 * Class:     yizheneng_Driver_SerialPort
 * Method:    deleteSerialPortCPP
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_yizheneng_Driver_SerialPort_deleteSerialPortCPP
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
